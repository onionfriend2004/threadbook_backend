// UserRepository ‚Äî —ç—Ç–æ PORT (–ø–æ—Ä—Ç) –∏–∑ Hexagonal Architecture.
// –û–±—ä—è–≤–ª–µ–Ω –≤ –¥–æ–º–µ–Ω–µ, —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–µ (adapter/).
//
// üîë –ü—Ä–∏–Ω—Ü–∏–ø—ã:
// - –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–≤–∏—Å–∏—Ç –¢–û–õ–¨–ö–û –æ—Ç —Ç–∏–ø–æ–≤ –¥–æ–º–µ–Ω–∞ (User, Email)
// - –ù–µ –∑–Ω–∞–µ—Ç –ø—Ä–æ –ë–î, GORM, SQL
// - –ú–µ—Ç–æ–¥—ã –≤—ã—Ä–∞–∂–µ–Ω—ã –Ω–∞ —è–∑—ã–∫–µ –±–∏–∑–Ω–µ—Å–∞

package domain

import "context"

// UserRepository –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.
type UserRepository interface {
	// FindByEmail –∏—â–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email.
	// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.
	FindByEmail(ctx context.Context, email Email) (*User, error)

	// Save —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
	// –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç ID, –µ—Å–ª–∏ –æ–Ω –ø—É—Å—Ç–æ–π (—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤ –∞–¥–∞–ø—Ç–µ—Ä–µ).
	Save(ctx context.Context, user *User) error
}
